// Generated by CoffeeScript 1.6.1
(function() {

  exports.Server = (function() {

    function Server() {
      var args;
      this.datomic = require("datomic").Datomic;
      this.express = require("express");
      this.edn = require("jsedn");
      args = require("optimist").usage("Pass port as -p (to use port 80 you need to sudo)")["default"]("p", "6655").alias("d", "debug").alias("p", "port").argv;
      this.debug = args.d;
      this.port = args.p;
    }

    Server.prototype.start = function(port) {
      var app, checkHandle, datomicHandle, datomicSession, ednResponse, server,
        _this = this;
      if (port == null) {
        port = false;
      }
      app = this.express();
      server = app.listen(port || (port = this.port));
      datomicSession = false;
      datomicHandle = false;
      checkHandle = function(req, res, next) {
        if (!datomicHandle) {
          return res.send(400);
        } else {
          return next();
        }
      };
      ednResponse = function(res) {
        return function(err, result) {
          if (err || result.slice(0, 6) === "<html>") {
            return res.send(401);
          } else {
            if (result) {
              return res.send(_this.edn.toJS(_this.edn.parse(result)));
            } else {
              return res.send(200);
            }
          }
        };
      };
      app.configure(function() {
        app.use(_this.express["static"]("" + __dirname + "/../public"));
        app.use(_this.express.bodyParser());
        app.post("/api/session", function(req, res) {
          datomicSession = req.body;
          datomicHandle = new _this.datomic(datomicSession.host, datomicSession.port, datomicSession.alias, datomicSession.db);
          return res.send(201);
        });
        app.get("/api/session", function(req, res) {
          return res.send(datomicSession);
        });
        app.get("/api/storages", checkHandle, function(req, res) {
          return datomicHandle.storages(ednResponse(res));
        });
        app.get("/api/databases/:name?", checkHandle, function(req, res) {
          return datomicHandle.databases(req.param("name"), ednResponse(res));
        });
        app.get("/api/query", checkHandle, function(req, res) {
          return datomicHandle.q(req.query.query, {
            args: req.query.args || ""
          }, ednResponse(res));
        });
        app.get("/api/datoms", checkHandle, function(req, res) {
          return datomicHandle.datoms(req.query.index, req.query, ednResponse(res));
        });
        app.get(/^\/api\/entity\/(\d+)$/, checkHandle, function(req, res) {
          return datomicHandle.entity(req.params[0], {}, ednResponse(res));
        });
        app.post(/^\/api\/db/, checkHandle, function(req, res) {
          return datomicHandle.createDatabase(req.body.alias, req.body.name, function(err, created) {
            return res.send(created ? 201 : 200);
          });
        });
        return app.post("/api/transact", checkHandle, function(req, res) {
          return datomicHandle.transact(req.body.transaction, ednResponse(res));
        });
      });
      return console.log("Server running. Go to http://localhost:" + port);
    };

    return Server;

  })();

}).call(this);
